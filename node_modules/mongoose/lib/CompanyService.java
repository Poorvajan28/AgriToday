import java.util.*;

public class CompanyService {
    private static class Customer {
        String name;
        int priority;

        Customer(String name, int priority) {
            this.name = name;
            this.priority = priority;
        }

        @Override
        public String toString() {
            return name + " (Priority: " + priority + ")";
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        PriorityQueue<Customer> queue = new PriorityQueue<>(Comparator.comparingInt(c -> c.priority));
        while (true) {
            System.out.println("Enter the choice:");
            System.out.println("1. Add Customer");
            System.out.println("2. Provide Service (Next)");
            System.out.println("3. Display Queue");
            System.out.println("4. Exit");
            int choice = sc.nextInt();
            sc.nextLine();
            switch (choice) {
                case 1:
                    System.out.print("Enter the customer name: ");
                    String name = sc.nextLine();
                    System.out.print("Enter the priority (lower number = higher priority): ");
                    int priority = sc.nextInt();
                    sc.nextLine();
                    queue.offer(new Customer(name, priority));
                    System.out.println("Customer added.");
                    displayQueue(queue);
                    break;
                case 2:
                    Customer served = queue.poll();
                    if (served != null) {
                        System.out.println("Serving customer: " + served.name);
                    } else {
                        System.out.println("No customers in queue.");
                    }
                    break;
                case 3:
                    displayQueue(queue);
                    break;
                case 4:
                    System.out.println("Exiting...");
                    return;
                default:
                    System.out.println("Invalid choice.");
            }
        }
    }

    private static void displayQueue(PriorityQueue<Customer> queue) {
        if (queue.isEmpty()) {
            System.out.println("Queue is empty.");
            return;
        }
        System.out.println("Current Queue:");
        PriorityQueue<Customer> temp = new PriorityQueue<>(queue);
        while (!temp.isEmpty()) {
            System.out.println(temp.poll());
        }
    }
}